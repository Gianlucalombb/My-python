"""
 Tuplas en Python
Una tupla es muy parecida a una lista, pero con una diferencia clave: las tuplas no se pueden cambiar una vez creadas. Esto significa que no pod√©s agregar, eliminar ni modificar sus elementos.

Se escriben con par√©ntesis ( ).

Guardan varios elementos ordenados, separados por comas.

üî® Crear y usar tuplas
punto = (3, 4)
Para acceder a un elemento us√°s el √≠ndice igual que en listas, empezando en 0:

print(punto[0])  # Imprime 3
print(punto[1])  # Imprime 4
 Inmutabilidad
No pod√©s cambiar los elementos de una tupla, por ejemplo:
punto[0] = 5 da error.

Son √∫tiles cuando quer√©s guardar datos que no deben cambiar, como coordenadas, configuraciones, etc.

M√©todos √∫tiles de tuplas
Aunque no pod√©s modificarla, pod√©s usar estos m√©todos para trabajar con tuplas:

count(elemento): cuenta cu√°ntas veces aparece un elemento.

index(elemento): te dice en qu√© posici√≥n aparece por primera vez un elemento (pod√©s buscar desde d√≥nde hasta d√≥nde).

Tambi√©n pod√©s usar la funci√≥n len(tupla) para saber cu√°ntos elementos tiene.

Ejemplo
mi_tupla = (1, 2, 3, 2, 4, 2)

print(mi_tupla.index(2))      # Imprime 1 (la primera vez que aparece el 2)
print(mi_tupla.index(2, 2))   # Imprime 3 (busca el 2 empezando en el √≠ndice 2)
print(mi_tupla.index(2, 2, 4))# Imprime 3 (busca el 2 entre los √≠ndices 2 y 4)
"""
"""
Ejercicio 1
Crea una tupla con los n√∫meros del 1 al 5 e imprim√≠ el tercer elemento.

numeros = (1, 2, 3, 4, 5)

print(numeros[2])
"""
"""
Ejercicio 2
Dada la tupla (10, 20, 30, 40, 50), mostr√° cu√°ntos elementos hay y en qu√© posici√≥n est√° el n√∫mero 40.

tupla = (10, 20, 30, 40, 50)

print(len(tupla))

print(tupla.index(40))
"""

"""
 Ejercicio 3
Cont√° cu√°ntas veces aparece el n√∫mero 3 en esta tupla:
(1, 3, 5, 3, 7, 3, 9)
"""

mi_tupla = (1, 3, 5, 3, 7, 3, 9)

print(mi_tupla.count(3))